---
import { Icon } from '@astrojs/starlight/components';
import { AppConfig } from '@/utils/AppConfig';
import Section from './Section.astro';
---

<Section>
  <div class="flex justify-between">
    <div class="text-3xl font-bold">
      <a href="/">{AppConfig.site_name}</a>
    </div>
    <div class="flex items-center">
      <nav>
        <ul class="hidden flex-row sm:flex">
          <li><a href="/tags" class="mr-3 hover:text-orange-600">TAGS</a></li>
        </ul>
      </nav>
      <div class="ml-3 mt-1.5 flex flex-col justify-center">
        <button
          id="theme-toggle"
          class="tada relative cursor-pointer p-2"
          aria-label="Toggle theme"
          data-theme="auto"
        >
          <span class="theme-icon theme-icon-light">
            <Icon name="sun" class="h-5 w-5" />
          </span>
          <span class="theme-icon theme-icon-dark">
            <Icon name="moon" class="h-5 w-5" />
          </span>
          <span class="theme-icon theme-icon-auto">
            <Icon name="laptop" class="h-5 w-5" />
          </span>
        </button>
      </div>
    </div>

    <script>
      type Theme = 'light' | 'dark' | 'auto';

      function getNextTheme(currentTheme: Theme): Theme {
        const themeOrder: Theme[] = ['auto', 'light', 'dark'];
        const currentIndex = themeOrder.indexOf(currentTheme);
        const nextIndex = (currentIndex + 1) % themeOrder.length;
        return themeOrder[nextIndex]!;
      }

      function initThemeToggle(): void {
        const themeManager = (window as any).themeManager;
        if (!themeManager) return;

        const themeToggle = document.getElementById('theme-toggle');
        if (!themeToggle) return;

        const currentTheme = themeManager.getTheme();
        themeToggle.setAttribute('data-theme', currentTheme);

        themeToggle.addEventListener('click', () => {
          const currentTheme = themeManager.getTheme();
          const nextTheme = getNextTheme(currentTheme);
          themeManager.setTheme(nextTheme);
          themeToggle.setAttribute('data-theme', nextTheme);
        });
      }

      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initThemeToggle);
      } else {
        initThemeToggle();
      }
    </script>
  </div>
</Section>

<style>
  /* Hide all theme icons by default */
  .theme-icon {
    display: none;
  }

  /* Show the appropriate icon based on data-theme attribute */
  [data-theme='light'] .theme-icon-light,
  [data-theme='dark'] .theme-icon-dark,
  [data-theme='auto'] .theme-icon-auto {
    display: inline-block;
  }
</style>
