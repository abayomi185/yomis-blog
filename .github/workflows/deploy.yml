name: Deploy

on:
  push:
    branches:
      - main

  pull_request:
    types: [opened, synchronize, reopened]

  workflow_dispatch:
    inputs:
      environment:
        description: 'Choose an environment to deploy to'
        required: false
        type: choice
        options:
          - production
          - draft
        default: 'production'

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install

      - name: Build project
        run: pnpm build
        env:
          CLOUDFLARE_R2_URL: ${{ secrets.CLOUDFLARE_R2_URL }}

      - name: Determine environment
        id: env
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "environment=draft" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "environment=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
          else
            echo "environment=production" >> $GITHUB_OUTPUT
          fi

      - name: Deploy
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          packageManager: pnpm
          wranglerVersion: '4.42.0'
          environment: ${{ steps.env.outputs.environment != 'production' && steps.env.outputs.environment || '' }}

      - name: Print deployment info
        env:
          DEPLOYMENT_URL: ${{ steps.deploy.outputs.deployment-url }}
          ENVIRONMENT: ${{ steps.env.outputs.environment }}
        run: |
          echo "Environment: $ENVIRONMENT"
          echo "Deployment URL: $DEPLOYMENT_URL"

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `### ðŸš€ Deployment Complete

              **Environment:** Draft
              **URL:** ${{ steps.deploy.outputs.deployment-url || 'https://draft.yomis.blog' }}
              **Commit:** ${context.sha.substring(0, 7)}

              Preview your changes at the URL above.`
            })
